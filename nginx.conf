worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # 업스트림(Upstream) 그룹 정의
    upstream nest_service {
        # Docker Compose 내부 DNS를 통해 'nest'라는 서비스가 여러 IP로 존재하면
        # Nginx가 라운드 로빈(기본)으로 트래픽을 분산
        # 'resolve' 지시자는 DNS 결과를 주기적으로 갱신
        # 'least_conn' 등 다른 알고리즘도 가능 (예: least_conn, ip_hash 등)
        #round-robin;  # 라운드 로빈 방식의 로드밸런싱
        least_conn;
        server nest:3000 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;

        location / {
            proxy_pass http://nest_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
